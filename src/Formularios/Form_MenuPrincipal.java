/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;
import Controllers.DBConexion;
import java.sql.Connection;
import Controllers.InterfaceUsuario;
import Controllers.Tools;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import javax.swing.Box;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.*;
public class Form_MenuPrincipal extends javax.swing.JFrame {
       
     private Form_Ventas RegistroVentas = null;
     private Form_Usuarios RegistroUsuarios = null;
     private Form_Roles RegistroRoles = null;
     private Form_Permisos RegistroPermisos = null;
     
    private String usuarioActual;
    private String rolUsuario;
    private int usuarioId;
    private Timer timer;
    

    public Form_MenuPrincipal(int id,String usuario, String rol) {this.setLocationRelativeTo(null);
        initComponents();
        
        this.usuarioId = id;
        this.usuarioActual = usuario;
         this.rolUsuario = rol;
         this.setLocationRelativeTo(null);                                 
    mostrarInformacionUsuario();
                configurarBarraMenu();
           
                      iniciarReloj();
        Set<String> permisosDelUsuario = DBConexion.obtenerPermisosDelRol(id);
                // la visibilidad de los menús de acuerdo a estos permisos.
        actualizarVisibilidadMenus(permisosDelUsuario);  
        
        
    }
    private void configurarBarraMenu() {
        jMenuBar1.add(Box.createHorizontalGlue());
        jMenuBar1.add(Usuario);
        jMenuBar1.add(Box.createHorizontalGlue());
        jMenuBar1.add(hora);
    }

    private void mostrarInformacionUsuario() {
        Usuario.setText("Usuario: " + usuarioActual +"                   Rol: " + rolUsuario);
    }
    /**
     * Creates new form MenuPrincipal
     */
    public Form_MenuPrincipal() {
        initComponents();
                iniciarReloj();
        configurarBarraMenu();
        

    }

private void actualizarHoraFecha() {
    // Obtener la hora y la fecha actual
    Date fechaActual = new Date();
    
    // Formatear la hora y la fecha
    SimpleDateFormat formatoFechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    String fechaHoraFormateada = formatoFechaHora.format(fechaActual);
    
    // Actualizar el texto del JLabel con la hora y la fecha
    hora.setText("Fecha y hora del sistema: " + fechaHoraFormateada);
}


private void iniciarReloj() {
    if (timer == null) {
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                actualizarHoraFecha();
            }
        });
        timer.start();
    }
}
        
            // En tu JFrame principal

 public void setMenuItemVisible(String nombreMenu, boolean mostrar) {
        for (int i = 0; i < getJMenuBar().getMenuCount(); i++) {
            JMenu menu = getJMenuBar().getMenu(i);
            if (menu != null && menu.getText().equalsIgnoreCase(nombreMenu)) {
                menu.setVisible(mostrar);
                return; // Finaliza después de encontrar y ajustar el menú
            }

            for (int j = 0; j < menu.getItemCount(); j++) {
                JMenuItem item = menu.getItem(j);
                if (item != null && item.getText().equalsIgnoreCase(nombreMenu)) {
                    item.setVisible(mostrar);
                    return; // Finaliza después de encontrar y ajustar el ítem
                }
            }
        }
    }

    /**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Escritorio = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Nuevo = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        Borrar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Buscar = new javax.swing.JMenuItem();
        Filtro = new javax.swing.JMenuItem();
        Imprimir = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Insertar_Fila = new javax.swing.JMenuItem();
        Eliminar_Fila = new javax.swing.JMenuItem();
        cerrar = new javax.swing.JMenuItem();
        Edición = new javax.swing.JMenu();
        Primero = new javax.swing.JMenuItem();
        Siguiente = new javax.swing.JMenuItem();
        Anterior = new javax.swing.JMenuItem();
        Ultimo = new javax.swing.JMenuItem();
        Stock = new javax.swing.JMenu();
        Categorias = new javax.swing.JMenuItem();
        Ciudades = new javax.swing.JMenuItem();
        Colores = new javax.swing.JMenuItem();
        Depositos = new javax.swing.JMenuItem();
        Disenos = new javax.swing.JMenuItem();
        Marcas = new javax.swing.JMenuItem();
        Monedas = new javax.swing.JMenuItem();
        Sucursales = new javax.swing.JMenuItem();
        Tamaños = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        Productos = new javax.swing.JMenuItem();
        AjusteStock = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        ReporteStock = new javax.swing.JMenuItem();
        Compras = new javax.swing.JMenu();
        Proveedores = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        Registrar_Compras = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        Reporte_Compras = new javax.swing.JMenuItem();
        Ventas = new javax.swing.JMenu();
        Clientes = new javax.swing.JMenuItem();
        Precios = new javax.swing.JMenuItem();
        Talonarios = new javax.swing.JMenuItem();
        Cotizaciones = new javax.swing.JMenuItem();
        Cuotas = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        Registro_Venta = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        Reporte_Ventas = new javax.swing.JMenuItem();
        Seguridad = new javax.swing.JMenu();
        Roles = new javax.swing.JMenuItem();
        CambiarContrasena = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        Usuarios = new javax.swing.JMenuItem();
        Permisos = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        ReporteSeguridad = new javax.swing.JMenuItem();
        Usuario = new javax.swing.JMenu();
        hora = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana Principal");
        setPreferredSize(new java.awt.Dimension(1350, 700));

        Escritorio.setPreferredSize(new java.awt.Dimension(1200, 650));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDO.png"))); // NOI18N
        jLabel2.setName("Imprimir"); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(1420, 680));
        Escritorio.add(jLabel2);
        jLabel2.setBounds(0, 0, 1400, 690);
        jLabel2.getAccessibleContext().setAccessibleName("Imprimir");

        Archivo.setText("Archivo");
        Archivo.setName("Archivo"); // NOI18N

        Nuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Nuevo.setText("Nuevo");
        Nuevo.setName("Nuevo"); // NOI18N
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });
        Archivo.add(Nuevo);

        Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Guardar.setText("Guardar");
        Guardar.setName("Guardar"); // NOI18N
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        Archivo.add(Guardar);

        Borrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Borrar.setText("Borrar");
        Borrar.setName("Borrar"); // NOI18N
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });
        Archivo.add(Borrar);
        Archivo.add(jSeparator1);

        Buscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Buscar.setText("Buscar");
        Buscar.setName("Buscar"); // NOI18N
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        Archivo.add(Buscar);

        Filtro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Filtro.setText("Filtrar");
        Filtro.setName("Filtrar"); // NOI18N
        Filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroActionPerformed(evt);
            }
        });
        Archivo.add(Filtro);

        Imprimir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });
        Archivo.add(Imprimir);
        Archivo.add(jSeparator2);

        Insertar_Fila.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, 0));
        Insertar_Fila.setText("Insertar Detalle");
        Insertar_Fila.setName("Insertar Fila"); // NOI18N
        Insertar_Fila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insertar_FilaActionPerformed(evt);
            }
        });
        Archivo.add(Insertar_Fila);

        Eliminar_Fila.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        Eliminar_Fila.setText("Eliminar  Detalle");
        Eliminar_Fila.setName("Eliminat Fila"); // NOI18N
        Eliminar_Fila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar_FilaActionPerformed(evt);
            }
        });
        Archivo.add(Eliminar_Fila);

        cerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        cerrar.setText("Cerrar Sesión");
        cerrar.setName("Cerrar Sesión"); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });
        Archivo.add(cerrar);

        jMenuBar1.add(Archivo);

        Edición.setText("Edición");
        Edición.setName("Edición"); // NOI18N

        Primero.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_UP, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Primero.setText("Primero");
        Primero.setName("Primero"); // NOI18N
        Primero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimeroActionPerformed(evt);
            }
        });
        Edición.add(Primero);

        Siguiente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Siguiente.setText("Siguiente");
        Siguiente.setName("Siguiente"); // NOI18N
        Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteActionPerformed(evt);
            }
        });
        Edición.add(Siguiente);

        Anterior.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Anterior.setText("Anterior");
        Anterior.setName("Anterior"); // NOI18N
        Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorActionPerformed(evt);
            }
        });
        Edición.add(Anterior);

        Ultimo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DOWN, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Ultimo.setText("Último");
        Ultimo.setName("Ultimo"); // NOI18N
        Ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UltimoActionPerformed(evt);
            }
        });
        Edición.add(Ultimo);

        jMenuBar1.add(Edición);

        Stock.setText("Stock");
        Stock.setName("Stock"); // NOI18N
        Stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockActionPerformed(evt);
            }
        });

        Categorias.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Categorias.setText("Categorías");
        Categorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoriasActionPerformed(evt);
            }
        });
        Stock.add(Categorias);

        Ciudades.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Ciudades.setText("Ciudades");
        Ciudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CiudadesActionPerformed(evt);
            }
        });
        Stock.add(Ciudades);

        Colores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Colores.setText("Colores");
        Colores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColoresActionPerformed(evt);
            }
        });
        Stock.add(Colores);

        Depositos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Depositos.setText("Depósitos");
        Depositos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositosActionPerformed(evt);
            }
        });
        Stock.add(Depositos);

        Disenos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Disenos.setText("Diseños");
        Disenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisenosActionPerformed(evt);
            }
        });
        Stock.add(Disenos);

        Marcas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Marcas.setText("Marcas");
        Marcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarcasActionPerformed(evt);
            }
        });
        Stock.add(Marcas);

        Monedas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Monedas.setText("Monedas");
        Monedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonedasActionPerformed(evt);
            }
        });
        Stock.add(Monedas);

        Sucursales.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Sucursales.setText("Sucursales");
        Sucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SucursalesActionPerformed(evt);
            }
        });
        Stock.add(Sucursales);

        Tamaños.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Tamaños.setText("Tamaños");
        Tamaños.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TamañosActionPerformed(evt);
            }
        });
        Stock.add(Tamaños);
        Stock.add(jSeparator10);

        Productos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK));
        Productos.setText("Productos");
        Productos.setName("Productos"); // NOI18N
        Productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductosActionPerformed(evt);
            }
        });
        Stock.add(Productos);

        AjusteStock.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        AjusteStock.setText("Ajustes Stock");
        AjusteStock.setName("Stock"); // NOI18N
        AjusteStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjusteStockActionPerformed(evt);
            }
        });
        Stock.add(AjusteStock);
        Stock.add(jSeparator8);

        ReporteStock.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ReporteStock.setText("Reporte de Stock");
        ReporteStock.setName("Reporte de Stock"); // NOI18N
        ReporteStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteStockActionPerformed(evt);
            }
        });
        Stock.add(ReporteStock);

        jMenuBar1.add(Stock);

        Compras.setText("Compras");
        Compras.setName("Compras"); // NOI18N
        Compras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprasActionPerformed(evt);
            }
        });

        Proveedores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK));
        Proveedores.setText("Proveedores");
        Proveedores.setName("Proveedores"); // NOI18N
        Proveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedoresActionPerformed(evt);
            }
        });
        Compras.add(Proveedores);
        Compras.add(jSeparator9);

        Registrar_Compras.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        Registrar_Compras.setText("Compras");
        Registrar_Compras.setName("Compras"); // NOI18N
        Registrar_Compras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Registrar_ComprasActionPerformed(evt);
            }
        });
        Compras.add(Registrar_Compras);
        Compras.add(jSeparator5);

        Reporte_Compras.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Reporte_Compras.setText("Reporte de Compras");
        Reporte_Compras.setName("Reporte de Compras"); // NOI18N
        Reporte_Compras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reporte_ComprasActionPerformed(evt);
            }
        });
        Compras.add(Reporte_Compras);

        jMenuBar1.add(Compras);

        Ventas.setText("Ventas");
        Ventas.setName("Ventas"); // NOI18N

        Clientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Clientes.setText("Clientes");
        Clientes.setName("Clientes"); // NOI18N
        Clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientesActionPerformed(evt);
            }
        });
        Ventas.add(Clientes);

        Precios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Precios.setText("Precios");
        Precios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreciosActionPerformed(evt);
            }
        });
        Ventas.add(Precios);

        Talonarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Talonarios.setText("Talonarios");
        Talonarios.setName("Talonarios"); // NOI18N
        Talonarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TalonariosActionPerformed(evt);
            }
        });
        Ventas.add(Talonarios);

        Cotizaciones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Cotizaciones.setText("Cotizaciones");
        Cotizaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CotizacionesActionPerformed(evt);
            }
        });
        Ventas.add(Cotizaciones);

        Cuotas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Cuotas.setText("Cuotas");
        Cuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuotasActionPerformed(evt);
            }
        });
        Ventas.add(Cuotas);
        Ventas.add(jSeparator6);

        Registro_Venta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Registro_Venta.setText("Ventas");
        Registro_Venta.setName("Ventas"); // NOI18N
        Registro_Venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Registro_VentaActionPerformed(evt);
            }
        });
        Ventas.add(Registro_Venta);
        Ventas.add(jSeparator7);

        Reporte_Ventas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Reporte_Ventas.setText("Reporte de Ventas");
        Reporte_Ventas.setName("Reporte de Ventas"); // NOI18N
        Reporte_Ventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reporte_VentasActionPerformed(evt);
            }
        });
        Ventas.add(Reporte_Ventas);

        jMenuBar1.add(Ventas);

        Seguridad.setText("Seguridad");
        Seguridad.setName("Seguridad"); // NOI18N

        Roles.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Roles.setText("Roles");
        Roles.setName("Roles"); // NOI18N
        Roles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RolesActionPerformed(evt);
            }
        });
        Seguridad.add(Roles);

        CambiarContrasena.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        CambiarContrasena.setText("Cambiar Contraseña");
        CambiarContrasena.setName("Cambiar Contraseña"); // NOI18N
        CambiarContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarContrasenaActionPerformed(evt);
            }
        });
        Seguridad.add(CambiarContrasena);
        Seguridad.add(jSeparator3);

        Usuarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Usuarios.setText("Usuarios");
        Usuarios.setName("Usuarios"); // NOI18N
        Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuariosActionPerformed(evt);
            }
        });
        Seguridad.add(Usuarios);

        Permisos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Permisos.setText("Permisos");
        Permisos.setName("Permisos"); // NOI18N
        Permisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermisosActionPerformed(evt);
            }
        });
        Seguridad.add(Permisos);
        Seguridad.add(jSeparator11);

        ReporteSeguridad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ReporteSeguridad.setText("Reporte Usuario");
        ReporteSeguridad.setName("Reporte de Usuarios"); // NOI18N
        ReporteSeguridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteSeguridadActionPerformed(evt);
            }
        });
        Seguridad.add(ReporteSeguridad);
        ReporteSeguridad.getAccessibleContext().setAccessibleName("Reporte de Usuarios");

        jMenuBar1.add(Seguridad);

        Usuario.setBackground(new java.awt.Color(102, 153, 255));
        Usuario.setBorder(null);
        Usuario.setOpaque(true);
        jMenuBar1.add(Usuario);

        hora.setContentAreaFilled(false);
        hora.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.add(hora);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 1400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
                int resultado = ((InterfaceUsuario) frameActivo).imNuevo();
            } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
        
    }//GEN-LAST:event_NuevoActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
                                
   JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imGuardar("tuCrud");
        if (resultado > 0) {
         
        } else if (resultado == -1) {
            
        }
        // Aquí puedes manejar otros valores de retorno si es necesario
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }

    }//GEN-LAST:event_GuardarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
      JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imBorrar("tuCrud");
        if (resultado == 1) {
            // Manejo del éxito, por ejemplo, actualizar la interfaz o mostrar un mensaje
        } else if (resultado == -1) {
            // Manejo del error, mostrar un mensaje de error
        }
        // Considerar manejar otros casos, como resultado == 0 (ninguna acción necesaria)
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para realizar esta operación.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_BorrarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
                                         
      JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imBuscar();
        if (resultado > 0) {
            // Manejo del éxito, por ejemplo, actualizar la interfaz o mostrar un mensaje
        } else if (resultado == -1) {
            // Manejo del error, mostrar un mensaje de error
        }
        // Considerar manejar otros casos, como resultado == 0 (ninguna acción necesaria)
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para realizar esta operación.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }                            
    
    }//GEN-LAST:event_BuscarActionPerformed

    private void PrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimeroActionPerformed
                                     
    JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imPrimero();
        // Ahora imPrimero debe manejar todos los mensajes internamente
        if (resultado != 1) {
            // Opcional: Realizar alguna acción específica si es necesario
        }
    } else { 
        // Si no hay una ventana activa, se informa al usuario
        JOptionPane.showMessageDialog(this, "No hay una ventana activa.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }

    }//GEN-LAST:event_PrimeroActionPerformed

    private void Insertar_FilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insertar_FilaActionPerformed
         JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imInsFilas();
        if (resultado == 1) {
            // Manejo del éxito, por ejemplo, actualizar la interfaz o mostrar un mensaje
        } else if (resultado == -1) {
            // Manejo del error, mostrar un mensaje de error
        }
        // Considerar manejar otros casos, como resultado == 0 (ninguna acción necesaria)
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para realizar esta operación.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_Insertar_FilaActionPerformed

    private void Eliminar_FilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar_FilaActionPerformed
    JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imDelFilas();
        if (resultado == 1) {
            // Manejo del éxito, por ejemplo, actualizar la interfaz o mostrar un mensaje
        } else if (resultado == -1) {
            // Manejo del error, mostrar un mensaje de error
        }
        // Considerar manejar otros casos, como resultado == 0 (ninguna acción necesaria)
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para realizar esta operación.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_Eliminar_FilaActionPerformed

    private void Registro_VentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Registro_VentaActionPerformed
        abrirYCentrarInternalFrame(new Form_Ventas());
    }//GEN-LAST:event_Registro_VentaActionPerformed

    private void ProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedoresActionPerformed
              abrirYCentrarInternalFrame(new Form_Proveedores());
    }//GEN-LAST:event_ProveedoresActionPerformed

    private void RolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RolesActionPerformed
   abrirYCentrarInternalFrame(new Form_Roles());

    }//GEN-LAST:event_RolesActionPerformed

    private void UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuariosActionPerformed
       abrirYCentrarInternalFrame(new Form_Usuarios());
    }//GEN-LAST:event_UsuariosActionPerformed

    private void PermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermisosActionPerformed

        abrirYCentrarInternalFrame(new Form_Permisos());
    }//GEN-LAST:event_PermisosActionPerformed

    private void SiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteActionPerformed
                                         
    JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imSiguiente();
        // El mensaje ya es manejado internamente
        if (resultado != 1) {
            // Log o acciones adicionales si es necesario
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para retroceder al registro anterior.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_SiguienteActionPerformed

    private void AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorActionPerformed
                                       
    JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imAnterior();
        // El mensaje ya es manejado internamente
        if (resultado != 1) {
            // Log o acciones adicionales si es necesario
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para retroceder al registro anterior.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_AnteriorActionPerformed

    private void UltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UltimoActionPerformed
        JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imUltimo();
        // El mensaje ya es manejado internamente
        if (resultado != 1) {
            // Log o acciones adicionales si es necesario
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para retroceder al registro anterior.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_UltimoActionPerformed

    private void ReporteSeguridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteSeguridadActionPerformed
    String reportePath = "C:\\Users\\Delia Silva\\Desktop\\Octavo Semestre\\Proyecto II\\InventorySystem\\Reportes\\ReportesUsuarios.jrxml";
    String titulo = "Reporte de Usuarios"; // Añade el título aquí
    Connection conexion = DBConexion.con;
    HashMap<String, Object> parametros = new HashMap<>();

    Form_ReportesUsuarios ventanaReporte = new Form_ReportesUsuarios(reportePath, titulo, conexion, parametros);
    abrirYCentrarInternalFrame(ventanaReporte);
    }//GEN-LAST:event_ReporteSeguridadActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
 // Cerrar la conexión a la base de datos
    DBConexion.desconecta();

    // Cerrar la ventana del menú principal
    this.dispose();

    // Volver a mostrar la ventana de inicio de sesión
    Form_Login loginForm = new Form_Login();
    loginForm.setVisible(true);
    }//GEN-LAST:event_cerrarActionPerformed

    private void FiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroActionPerformed
     JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imFiltrar();
        if (resultado == 0) {

        } else {
           // JOptionPane.showMessageDialog(this, "Esta acción no se puede realizar ", "Acción no permitida", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para buscar.", "Información", JOptionPane.INFORMATION_MESSAGE);
    } 
    }//GEN-LAST:event_FiltroActionPerformed

    private void CambiarContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarContrasenaActionPerformed
 abrirYCentrarInternalFrame(new Form_CambiarContraseña(usuarioId));
    }//GEN-LAST:event_CambiarContrasenaActionPerformed

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
          JInternalFrame frameActivo = Escritorio.getSelectedFrame();
    if (frameActivo != null && frameActivo instanceof InterfaceUsuario) {
        int resultado = ((InterfaceUsuario) frameActivo).imImprimir();
        if (resultado == 1) {
            // Manejo del éxito, por ejemplo, actualizar la interfaz o mostrar un mensaje
        } else if (resultado == -1) {
            // Manejo del error, mostrar un mensaje de error
        }
        // Considerar manejar otros casos, como resultado == 0 (ninguna acción necesaria)
    } else {
        JOptionPane.showMessageDialog(this, "No hay una ventana activa para realizar esta operación.", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_ImprimirActionPerformed

    private void MarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarcasActionPerformed
         abrirYCentrarInternalFrame(new Form_Marcas());
    }//GEN-LAST:event_MarcasActionPerformed

    private void DisenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisenosActionPerformed
       abrirYCentrarInternalFrame(new Form_Diseños());
    }//GEN-LAST:event_DisenosActionPerformed

    private void MonedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonedasActionPerformed
         abrirYCentrarInternalFrame(new Form_Monedas());
    }//GEN-LAST:event_MonedasActionPerformed

    private void ColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColoresActionPerformed
            abrirYCentrarInternalFrame(new Form_Colores());
    }//GEN-LAST:event_ColoresActionPerformed

    private void CiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CiudadesActionPerformed
        abrirYCentrarInternalFrame(new Form_Ciudades());
    }//GEN-LAST:event_CiudadesActionPerformed

    private void ComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprasActionPerformed

    }//GEN-LAST:event_ComprasActionPerformed

    private void ClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientesActionPerformed
        abrirYCentrarInternalFrame(new Form_Clientes());
    }//GEN-LAST:event_ClientesActionPerformed

    private void CategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoriasActionPerformed
         abrirYCentrarInternalFrame(new Form_Categorias());
    }//GEN-LAST:event_CategoriasActionPerformed

    private void ProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductosActionPerformed
       abrirYCentrarInternalFrame(new Form_Productos());
    }//GEN-LAST:event_ProductosActionPerformed

    private void StockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockActionPerformed

    }//GEN-LAST:event_StockActionPerformed

    private void TamañosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TamañosActionPerformed
        abrirYCentrarInternalFrame(new Form_Tamaños());
    }//GEN-LAST:event_TamañosActionPerformed

    private void DepositosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositosActionPerformed
       abrirYCentrarInternalFrame(new Form_Depositos());
    }//GEN-LAST:event_DepositosActionPerformed

    private void SucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SucursalesActionPerformed
     abrirYCentrarInternalFrame(new Form_Sucursales());
    }//GEN-LAST:event_SucursalesActionPerformed

    private void TalonariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TalonariosActionPerformed
        abrirYCentrarInternalFrame(new Form_Talonarios());
    }//GEN-LAST:event_TalonariosActionPerformed

    private void PreciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreciosActionPerformed
         abrirYCentrarInternalFrame(new Form_Lista_Precios());
    }//GEN-LAST:event_PreciosActionPerformed

    private void CuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuotasActionPerformed
          abrirYCentrarInternalFrame(new Form_Cuotas());
    }//GEN-LAST:event_CuotasActionPerformed

    private void Registrar_ComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Registrar_ComprasActionPerformed
        abrirYCentrarInternalFrame(new Form_Compras());
    }//GEN-LAST:event_Registrar_ComprasActionPerformed

    private void AjusteStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjusteStockActionPerformed
       abrirYCentrarInternalFrame(new Form_AjustesStock());
    }//GEN-LAST:event_AjusteStockActionPerformed

    private void Reporte_VentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reporte_VentasActionPerformed
            String reportePath = "C:\\Users\\Delia Silva\\Desktop\\Octavo Semestre\\Proyecto II\\InventorySystem\\Reportes\\ReportesVentas.jrxml";
    String titulo = "Reporte de Ventas"; // Añade el título aquí
    Connection conexion = DBConexion.con;
    HashMap<String, Object> parametros = new HashMap<>();

    Form_ReportesVenta ventanaReporte = new Form_ReportesVenta(reportePath, titulo, conexion, parametros);
    abrirYCentrarInternalFrame(ventanaReporte);
    }//GEN-LAST:event_Reporte_VentasActionPerformed

    private void Reporte_ComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reporte_ComprasActionPerformed
                   String reportePath = "C:\\Users\\Delia Silva\\Desktop\\Octavo Semestre\\Proyecto II\\InventorySystem\\Reportes\\ReportesCompras.jrxml";
    String titulo = "Reporte de Compras"; // Añade el título aquí
    Connection conexion = DBConexion.con;
    HashMap<String, Object> parametros = new HashMap<>();

    Form_ReportesCompra ventanaReporte = new Form_ReportesCompra(reportePath, titulo, conexion, parametros);
    abrirYCentrarInternalFrame(ventanaReporte);
    }//GEN-LAST:event_Reporte_ComprasActionPerformed

    private void ReporteStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteStockActionPerformed
                     String reportePath = "C:\\Users\\Delia Silva\\Desktop\\Octavo Semestre\\Proyecto II\\InventorySystem\\Reportes\\ReportesStock.jrxml";
    String titulo = "Reporte de Ajuste Stock"; // Añade el título aquí
    Connection conexion = DBConexion.con;
    HashMap<String, Object> parametros = new HashMap<>();

    Form_ReportesAjusteStock ventanaReporte = new Form_ReportesAjusteStock (reportePath, titulo, conexion, parametros);
    abrirYCentrarInternalFrame(ventanaReporte);
    }//GEN-LAST:event_ReporteStockActionPerformed

    private void CotizacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CotizacionesActionPerformed
         abrirYCentrarInternalFrame(new Form_Cotizaciones());;// TODO add your handling code here:
    }//GEN-LAST:event_CotizacionesActionPerformed
// Declaración del HashMap para llevar un registro de las instancias de los JInternalFrame abiertos
private Map<String, JInternalFrame> framesAbiertos = new HashMap<>();

private void abrirYCentrarInternalFrame(JInternalFrame internalFrame) {
    String nombreFrame = internalFrame.getClass().getName(); // Obtener el nombre de la clase como clave
    
    if (!framesAbiertos.containsKey(nombreFrame) || framesAbiertos.get(nombreFrame).isClosed()) {
        // Si el JInternalFrame no está en el mapa o está cerrado, lo abrimos y lo centramos
        Escritorio.add(internalFrame);
        internalFrame.setVisible(true);
        centrar(internalFrame);
        
        // Establecemos el menú principal como el "padre" del JInternalFrame
        Escritorio.setLayer(internalFrame, JLayeredPane.PALETTE_LAYER);
        
        // Actualizamos el mapa con la nueva instancia del JInternalFrame
        framesAbiertos.put(nombreFrame, internalFrame);
    } else {
        // Si el JInternalFrame ya está abierto, lo traemos al frente
        JInternalFrame existingFrame = framesAbiertos.get(nombreFrame);
        Escritorio.moveToFront(existingFrame);
        try {
            existingFrame.setSelected(true);
            existingFrame.setIcon(false); // Restaurar si estaba minimizado
        } catch (java.beans.PropertyVetoException e) {
            e.printStackTrace();
        }
    }
    
    // Traemos al frente el JInternalFrame recién abierto
    Escritorio.moveToFront(internalFrame);
    
    Escritorio.revalidate();
    Escritorio.repaint();
}


    private void centrar(JInternalFrame internalFrame) {
    Dimension desktopSize = Escritorio.getSize(); // Obtener el tamaño del escritorio
    Dimension frameSize = internalFrame.getSize(); // Obtener el tamaño del internal frame
    
    int x = (desktopSize.width - frameSize.width) / 2; // Calcular la posición x para centrar
    int y = (desktopSize.height - frameSize.height) / 2; // Calcular la posición y para centrar
    
    if (internalFrame.isShowing()) { // Si el internal frame ya está mostrándose
        internalFrame.setLocation(x, y); // Centrar el internal frame
    } else { // Si el internal frame no está mostrándose
        Escritorio.add(internalFrame); // Agregar el internal frame al escritorio
        internalFrame.setLocation(x, y); // Centrar el internal frame
        internalFrame.setVisible(true); // Hacer visible el internal frame
    }
}

    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AjusteStock;
    private javax.swing.JMenuItem Anterior;
    private javax.swing.JMenu Archivo;
    private javax.swing.JMenuItem Borrar;
    private javax.swing.JMenuItem Buscar;
    private javax.swing.JMenuItem CambiarContrasena;
    private javax.swing.JMenuItem Categorias;
    private javax.swing.JMenuItem Ciudades;
    private javax.swing.JMenuItem Clientes;
    private javax.swing.JMenuItem Colores;
    private javax.swing.JMenu Compras;
    private javax.swing.JMenuItem Cotizaciones;
    private javax.swing.JMenuItem Cuotas;
    private javax.swing.JMenuItem Depositos;
    private javax.swing.JMenuItem Disenos;
    private javax.swing.JMenu Edición;
    private javax.swing.JMenuItem Eliminar_Fila;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JMenuItem Filtro;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem Imprimir;
    private javax.swing.JMenuItem Insertar_Fila;
    private javax.swing.JMenuItem Marcas;
    private javax.swing.JMenuItem Monedas;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JMenuItem Permisos;
    private javax.swing.JMenuItem Precios;
    private javax.swing.JMenuItem Primero;
    private javax.swing.JMenuItem Productos;
    private javax.swing.JMenuItem Proveedores;
    private javax.swing.JMenuItem Registrar_Compras;
    private javax.swing.JMenuItem Registro_Venta;
    private javax.swing.JMenuItem ReporteSeguridad;
    private javax.swing.JMenuItem ReporteStock;
    private javax.swing.JMenuItem Reporte_Compras;
    private javax.swing.JMenuItem Reporte_Ventas;
    private javax.swing.JMenuItem Roles;
    private javax.swing.JMenu Seguridad;
    private javax.swing.JMenuItem Siguiente;
    private javax.swing.JMenu Stock;
    private javax.swing.JMenuItem Sucursales;
    private javax.swing.JMenuItem Talonarios;
    private javax.swing.JMenuItem Tamaños;
    private javax.swing.JMenuItem Ultimo;
    private javax.swing.JMenu Usuario;
    private javax.swing.JMenuItem Usuarios;
    private javax.swing.JMenu Ventas;
    private javax.swing.JMenuItem cerrar;
    private javax.swing.JMenu hora;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    // End of variables declaration//GEN-END:variables

 private void actualizarVisibilidadMenus(Set<String> permisos) {
    // Menús principales
    Archivo.setVisible(permisos.contains("menu1"));
    Edición.setVisible(permisos.contains("menu2"));
    Stock.setVisible(permisos.contains("menu4"));
    Compras.setVisible(permisos.contains("menu5"));
    Ventas.setVisible(permisos.contains("menu6"));
    Seguridad.setVisible(permisos.contains("menu7"));

    // Submenús de "Archivo"
    Nuevo.setVisible(Archivo.isVisible() && permisos.contains("submenu1.1"));
    Guardar.setVisible(Archivo.isVisible() && permisos.contains("submenu1.2"));
    Borrar.setVisible(Archivo.isVisible() && permisos.contains("submenu1.3"));
    Buscar.setVisible(Archivo.isVisible() && permisos.contains("submenu1.4"));
    Filtro.setVisible(Archivo.isVisible() && permisos.contains("submenu1.5"));
    Imprimir.setVisible(Archivo.isVisible() && permisos.contains("submenu1.6"));
    Insertar_Fila.setVisible(Archivo.isVisible() && permisos.contains("submenu1.7"));
    Eliminar_Fila.setVisible(Archivo.isVisible() && permisos.contains("submenu1.8"));
    cerrar.setVisible(Archivo.isVisible() && permisos.contains("submenu1.9"));

    // Submenús de "Edición"
    Primero.setVisible(Edición.isVisible() && permisos.contains("submenu2.1"));
    Siguiente.setVisible(Edición.isVisible() && permisos.contains("submenu2.2"));
    Anterior.setVisible(Edición.isVisible() && permisos.contains("submenu2.3"));
    Ultimo.setVisible(Edición.isVisible() && permisos.contains("submenu2.4"));

    // Submenús de "Stock"
    Productos.setVisible(Stock.isVisible() && permisos.contains("submenu4.1"));
    Precios.setVisible(Stock.isVisible() && permisos.contains("submenu4.2"));
    AjusteStock.setVisible(Stock.isVisible() && permisos.contains("submenu4.3"));
    ReporteStock.setVisible(Stock.isVisible() && permisos.contains("submenu4.4"));

    // Submenús de "Compras"
    Proveedores.setVisible(Compras.isVisible() && permisos.contains("submenu5.1"));
    Registrar_Compras.setVisible(Compras.isVisible() && permisos.contains("submenu5.2"));
    Reporte_Compras.setVisible(Compras.isVisible() && permisos.contains("submenu5.4"));

    // Submenús de "Ventas"
    Clientes.setVisible(Ventas.isVisible() && permisos.contains("submenu6.1"));
    Talonarios.setVisible(Ventas.isVisible() && permisos.contains("submenu6.2"));
    Registro_Venta.setVisible(Ventas.isVisible() && permisos.contains("submenu6.4"));
    Reporte_Ventas.setVisible(Ventas.isVisible() && permisos.contains("submenu6.5"));

    // Submenús de "Seguridad"
    Roles.setVisible(Seguridad.isVisible() && permisos.contains("submenu7.1"));
    CambiarContrasena.setVisible(Seguridad.isVisible() && permisos.contains("submenu7.2"));
    Usuarios.setVisible(Seguridad.isVisible() && permisos.contains("submenu7.3"));
    Permisos.setVisible(Seguridad.isVisible() && permisos.contains("submenu7.4"));
    ReporteSeguridad.setVisible(Seguridad.isVisible() && permisos.contains("submenu7.5"));
    
// Verificar si al menos un submenú está visible para cada menú principal
boolean archivoVisible = Nuevo.isVisible() || Guardar.isVisible() || Borrar.isVisible() || Buscar.isVisible() ||
                        Filtro.isVisible() || Imprimir.isVisible() || Insertar_Fila.isVisible() || 
                        Eliminar_Fila.isVisible() || cerrar.isVisible();
boolean edicionVisible = Primero.isVisible() || Siguiente.isVisible() || Anterior.isVisible() || Ultimo.isVisible();
boolean stockVisible = Productos.isVisible() || Precios.isVisible() || AjusteStock.isVisible() || ReporteStock.isVisible();
boolean comprasVisible = Proveedores.isVisible() || Registrar_Compras.isVisible() || Reporte_Compras.isVisible();
boolean ventasVisible = Clientes.isVisible() || Talonarios.isVisible() || Registro_Venta.isVisible() || Reporte_Ventas.isVisible();
boolean seguridadVisible = Roles.isVisible() || CambiarContrasena.isVisible() || Usuarios.isVisible() || Permisos.isVisible() || ReporteSeguridad.isVisible();

// Ocultar los menús principales si ninguno de sus submenús está visible
Archivo.setVisible(archivoVisible);
Edición.setVisible(edicionVisible);
Stock.setVisible(stockVisible);
Compras.setVisible(comprasVisible);
Ventas.setVisible(ventasVisible);
Seguridad.setVisible(seguridadVisible);
}
}
